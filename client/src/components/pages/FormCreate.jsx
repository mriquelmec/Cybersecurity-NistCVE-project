import axios from "axios";
import { useNavigate } from "react-router-dom";
import Swal from 'sweetalert2';
import React from 'react';
import { useFormik } from 'formik';
import * as Yup from 'yup';


const validationSchema = Yup.object({
    cveId: Yup.string()
        .min(9, 'CVE Id must be at least 9 characters long')
        .required('CVE is required!!!'),
    severity: Yup.string()
        .min(3, 'Severity must have at least 3 characters')
        .required('Severity is required, Low, Medium or High'),

});

const FormCreation = () => {
    const navigate = useNavigate();

    const formik = useFormik({
        initialValues: {
            cveId: '',
            severity: '',
            description: '',
            publishedDate: '',
            lastModifiedDate: '',
        },

        validationSchema,
        onSubmit: (values, { setSubmitting, setErrors }) => {
            axios.post('http://localhost:8000/api/cves/create', values)
                .then(res => {
                    console.log(res);
                    navigate('/cve/getall');
                })
                .catch(err => {
                    console.log(err);
                    if (err.response && err.response.data.field === 'cveId') {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: err.response.data.message,
                        });
                    } else if (err.response && err.response.data.errors) {
                        setErrors(err.response.data.errors);
                    }
                })
                .finally(() => {
                    setSubmitting(false);
                });
        },
    });

    return (
        <div className='col-6 mx-auto'>
            <div className='d-flex justify-content-between align-items-center'>
                <h2>Bake a new Villain CVE</h2>
            </div>
            <form onSubmit={formik.handleSubmit}>
                <div className='row'>
                    <div className='col'>
                        <div className='form-group mb-3'>
                            <label className='form-label'>CVE Id:</label>
                            <input
                                className={`form-control ${formik.touched.cveId && formik.errors.cveId ? 'is-invalid' : ''}`}
                                type="text"
                                name="cveId"
                                onChange={formik.handleChange}
                                onBlur={formik.handleBlur}
                                value={formik.values.cveId}
                            />
                            {formik.touched.cveId && formik.errors.cveId && (
                                <div className="invalid-feedback">{formik.errors.cveId}</div>
                            )}
                        </div>
                        <div className='form-group mb-3'>
                            <label className='form-label'>Severity:</label>
                            <input
                                className={`form-control ${formik.touched.severity && formik.errors.severity ? 'is-invalid' : ''}`}
                                type="text"
                                name="severity"
                                onChange={formik.handleChange}
                                onBlur={formik.handleBlur}
                                value={formik.values.severity}
                            />
                            {formik.touched.severity && formik.errors.severity && (
                                <div className="invalid-feedback">{formik.errors.severity}</div>
                            )}
                        </div>
                        <div className='form-group mb-3'>
                            <label className='form-label'>Description:</label>
                            <input
                                className={`form-control ${formik.touched.description && formik.errors.description ? 'is-invalid' : ''}`}
                                type="text"
                                name="description"
                                onChange={formik.handleChange}
                                onBlur={formik.handleBlur}
                                value={formik.values.description}
                            />
                            {formik.touched.description && formik.errors.description && (
                                <div className="invalid-feedback">{formik.errors.description}</div>
                            )}
                        </div>
                    </div>
                    <div className='col'>
                        <div className='form-group mb-3'>
                            <label className='form-label'>Published Date:</label>
                            <input
                                className={`form-control ${formik.touched.publishedDate && formik.errors.publishedDate ? 'is-invalid' : ''}`}
                                type="text"
                                name="publishedDate"
                                onChange={formik.handleChange}
                                onBlur={formik.handleBlur}
                                value={formik.values.publishedDate}
                            />
                            {formik.touched.publishedDate && formik.errors.publishedDate && (
                                <div className="invalid-feedback">{formik.errors.publishedDate}</div>
                            )}
                        </div>
                        <div className='form-group mb-3'>
                            <label className='form-label'>Last Modified Date</label>
                            <input
                                className={`form-control ${formik.touched.lastModifiedDate && formik.errors.lastModifiedDate ? 'is-invalid' : ''}`}
                                type="text"
                                name="lastModifiedDate"
                                onChange={formik.handleChange}
                                onBlur={formik.handleBlur}
                                value={formik.values.lastModifiedDate}
                            />
                            {formik.touched.lastModifiedDate && formik.errors.lastModifiedDate && (
                                <div className="invalid-feedback">{formik.errors.lastModifiedDate}</div>
                            )}
                        </div>
                    </div>
                </div>
                <button className='btn btn-primary' type="submit" disabled={formik.isSubmitting}>Bake a new villain CVE!</button>
            </form>
        </div>
    );
};

export default FormCreation;




