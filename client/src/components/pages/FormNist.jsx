import axios from "axios";
import { useNavigate } from "react-router-dom";
import Swal from 'sweetalert2';
import React from 'react';
import { useFormik } from 'formik';
import * as Yup from 'yup';


const validationSchema = Yup.object({
    cveId: Yup.string()
        .min(9, 'El CVE debe tener al menos 9 caracteres')
        .required('El CVE es obligatorio'),
});

const FormNistdb = () => {
    const navigate = useNavigate();

    const formik = useFormik({
        initialValues: {
            cveId: '',
        },
        validationSchema,

        onSubmit: (values, { setSubmitting, setErrors }) => {
            const { cveId } = values;
            console.log(cveId)
            axios.get(`http://localhost:8000/api/cves/retrieve_cve/${cveId}`, values)
                .then(res => {
                    console.log(res);
                    navigate('/cve/getall');
                })
                .catch(err => {
                    console.log(err);
                    if (err.response && err.response.data.field === 'cveId') {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: err.response.data.message,
                        });
                    } else if (err.response && err.response.data.errors) {
                        setErrors(err.response.data.errors);
                    }
                })
                .finally(() => {
                    setSubmitting(false);
                });
        },
    });

    return (
        <div className='col-6 mx-auto'>
            <div className='d-flex justify-content-between align-items-center'>
                <h2>Bake your CVE'S directly from the NIST Database</h2>
            </div>
            <form method="GET" onSubmit={formik.handleSubmit}>
                <div className='row'>
                    <div className='col'>
                        <div className='form-group mb-3'>
                            <label className='form-label'>Retrieve your CVE:</label>
                            <input
                                className={`form-control ${formik.touched.cveId && formik.errors.cveId ? 'is-invalid' : ''}`}
                                type="text"
                                name="cveId"
                                onChange={formik.handleChange}
                                onBlur={formik.handleBlur}
                                value={formik.values.cveId}
                            />
                            {formik.touched.cveId && formik.errors.cveId && (
                                <div className="invalid-feedback">{formik.errors.cveId}</div>
                            )}
                        </div>
                    </div>
                </div>
                <button className='btn btn-primary' type="submit" disabled={formik.isSubmitting}>Bake your CVE</button>
            </form>
        </div>
    );
};

export default FormNistdb;
