import axios from 'axios';
import Cve from '../src/models/cve.model.js';

const BASE_URL = 'https://services.nvd.nist.gov/rest/json/cves/2.0';

const fetchCveFromNVD = async (cveId) => {
    try {
        const response = await axios.get(`${BASE_URL}?cveId=${cveId}`);
        const cveData = response.data.vulnerabilities[0];

        if (!cveData) {
            throw new Error('CVE not found in NVD');
        }

        return cveData;
    } catch (error) {
        throw new Error('Error fetching data from NVD: ' + error.message);
    }
};

const saveCveToDatabase = async (cveData) => {
    try {
        // Check if CVE already exists
        const existingCve = await Cve.findOne({ cveId: cveData.cve.id });
        if (existingCve) {
            // Optionally update if needed
            return existingCve;
        }

        // Create new CVE
        const newCve = new Cve({
            cveId: cveData.cve.id,
            severity: cveData.cve.metrics.cvssMetricV2.baseSeverity,
            publishedDate: cveData.publishedDate,
            lastModifiedDate: cveData.lastModifiedDate,
            references: cveData.cve.references.reference_data.map(ref => ref.url),
            impact: cveData.cve.impact,
        });

        await newCve.save();
        return newCve;
    } catch (error) {
        throw new Error('Error saving CVE to database: ' + error.message);
    }
};

export default {
    fetchCveFromNVD,
    saveCveToDatabase,
};
